---
- name: "Install Nginx"
  apt:
    name=nginx
    state=latest
  notify:
    - nginx systemd

- name: "Enable default site"
  template:
    src: "templates/nginx.conf.j2"
    dest: "/etc/nginx/sites-enabled/default"
  notify:
    - nginx restart

- name: "Install PHP Extensions"
  apt: name={{ item }} update_cache=yes state=latest
  loop: "{{ php_modules }}"

- name: "Purge Apache2"
  apt:
    name=apache2
    state=absent
    purge=yes

- name: "Create site root folder"
  file:
    path: "/var/www/{{ domain_name }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: '0755'

- name: "Download and unpack latest WordPress"
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www/{{ domain_name }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
    creates: "/var/www/{{ domain_name }}/wp-admin"

- name: "Set ownership"
  file:
    path: "/var/www/{{ domain_name }}"
    state: directory
    recurse: yes
    owner: "{{ owner }}"
    group: "{{ group }}"

- name: "Set permissions for directories"
  shell: "/usr/bin/find /var/www/{{ domain_name }}/ -type d -exec chmod 755 {} \\;"

- name: "Set permissions for files"
  shell: "/usr/bin/find /var/www/{{ domain_name }}/ -type f -exec chmod 644 {} \\;"

- name: "Update WordPress config file"
  template:
    src: "templates/wp-config.php.j2"
    dest: "/var/www/{{ domain_name }}/wp-config.php"

- name: "Restart nginx, in all cases"
  ansible.builtin.service:
    name: nginx
    state: restarted

- name: "Download Wordpress CLI"
  command: curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -o /tmp/wp-cli.phar
  args:
    creates: "/tmp/wp-cli.phar"

- name: "Move the binary to the final destination"
  copy:
    src: "/tmp/wp-cli.phar"
    dest: "/usr/local/bin/wp"
    owner: "root"
    group: "root"
    mode: 0755
    remote_src: yes

- name: "Create_site"
  command: sudo -u ubuntu -- wp core install --url="www.{{ domain_name }}" --title="DS-site_for_netology" --admin_user="admin" --admin_password="admin" --admin_email="admin@{{ domain_name }}" --skip-email
  args:
    chdir: "/var/www/{{ domain_name }}"

